- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/Vpc_setup

  tasks:
    - name: Import VPC Variables
      include_vars: vars/Vpc_setup

    - name: Create vprofile VPC
      amazon.aws.ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        dns_support: true
        dns_hostnames: true
        tenancy: default
        state: present
      register: vpcout

    - name: Create Public Subnet 1 in Zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        cidr: "{{ PubSub1Cidr }}"
        map_public: true
        state: present
        tags:
          Name: vprofile-pubsub1
      register: pubsub1_out

    - name: Create Public Subnet 2 in Zone2
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        cidr: "{{ PubSub2Cidr }}"
        map_public: true
        state: present
        tags:
          Name: vprofile_pubsub2
      register: pubsub2_out

    - name: Create Public Subnet 3 in Zone3
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        cidr: "{{ PubSub3Cidr }}"
        map_public: true
        state: present
        tags:
          Name: vprofile_pubsub3
      register: pubsub3_out

    - name: Create Private Subnet 1 in Zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        cidr: "{{ PrivSub1Cidr }}"
        state: present
        tags:
          Name: vprofile_privsub1
      register: privsub1_out

    - name: Create Private Subnet 2 in Zone2
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        cidr: "{{ PrivSub2Cidr }}"
        state: present
        tags:
          Name: vprofile_privsub2
      register: privsub2_out

    - name: Create Private Subnet 3 in Zone3
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        cidr: "{{ PrivSub3Cidr }}"
        state: present
        tags:
          Name: vprofile_privsub3
      register: privsub3_out

    - name: Internet Gateway Setup
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: vprofile_IGW
      register: igw_out

    - name: Set up public subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: VProfile-PubRT
        subnets:
          - "{{ pubsub1_out.subnet.id }}"
          - "{{ pubsub2_out.subnet.id }}"
          - "{{ pubsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
          - dest: ::/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: pubRT_out

    - name: Create new NAT gateway and allocate new EIP if a NAT gateway does not yet exist in the subnet.
      amazon.aws.ec2_vpc_nat_gateway:
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        state: present
        region: "{{ region }}"
        wait: true
      register: NATGW_out

    - name: Set up Private subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: Vprofile_PrivRT
        subnets:
          - "{{ privsub1_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            nat_gateway_id: "{{ NATGW_out.nat_gateway_id }}"
      register: privRT_out

    - name: Create S3 Bucket
      amazon.aws.s3_bucket:
        name: "{{ s3_bucket_name }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: "{{ s3_bucket_name }}"
      register: s3_bucket_out

    - name: Debug Information
      debug:
        var: item
      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        - NATGW_out.nat_gateway_id
        - privRT_out.route_table.id
        - s3_bucket_out.bucket.id

    - name: Set facts
      set_fact:
        vpcid: "{{ vpcout.vpc.id }}"
        pubsub1id: "{{ pubsub1_out.subnet.id }}"
        pubsub2id: "{{ pubsub2_out.subnet.id }}"
        pubsub3id: "{{ pubsub3_out.subnet.id }}"
        privsub1id: "{{ privsub1_out.subnet.id }}"
        privsub2id: "{{ privsub2_out.subnet.id }}"
        privsub3id: "{{ privsub3_out.subnet.id }}"
        igwid: "{{ igw_out.gateway_id }}"
        pubRTid: "{{ pubRT_out.route_table.id }}"
        NATGWid: "{{ NATGW_out.nat_gateway_id }}"
        privRTid: "{{ privRT_out.route_table.id }}"
        s3_bucket_id: "{{ s3_bucket_out.bucket.id }}"
        cacheable: yes

    - name: Create variables file for VPC and S3 output
      copy:
        content: |
          vpcid: {{ vpcout.vpc.id }}
          pubsub1id: {{ pubsub1_out.subnet.id }}
          pubsub2id: {{ pubsub2_out.subnet.id }}
          pubsub3id: {{ pubsub3_out.subnet.id }}
          privsub1id: {{ privsub1_out.subnet.id }}
          privsub2id: {{ privsub2_out.subnet.id }}
          privsub3id: {{ privsub3_out.subnet.id }}
          igwid: {{ igw_out.gateway_id }}
          pubRTid: {{ pubRT_out.route_table.id }}
          NATGWid: {{ NATGW_out.nat_gateway_id }}
          privRTid: {{ privRT_out.route_table.id }}
          s3_bucket_id: {{ s3_bucket_out.bucket.id }}
        dest: vars/output_vars

    - name: Create security group for RDS
      amazon.aws.ec2_group:
        name: rds_sg
        description: Security group for RDS
        region: "{{ region }}"
        vpc_id: "{{ vpcout.vpc.id }}"
        state: present
        tags:
          Name: "{{ sg_tag }}"
      register: rds_sg_out

    - name: Create security group for ELB
      amazon.aws.ec2_group:
        name: elb_sg
        description: Security group for ELB
        region: "{{ region }}"
        vpc_id: "{{ vpcout.vpc.id }}"
        state: present
        tags:
          Name: "{{ sg_tag }}"
      register: elb_sg_out

    - name: Create RDS Subnet Group
      amazon.aws.rds_subnet_group:
        name: "{{ rds_subnet_group }}"
        description: "Subnet group for RDS"
        subnets:
          - "{{ privsub1_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub3_out.subnet.id }}"
        region: "{{ region }}"
        state: present
      register: rds_subnet_group_out

    - name: Create RDS instance
      amazon.aws.rds_instance:
        db_instance_identifier: "{{ rds_instance_identifier }}"
        db_name: "{{ rds_db_name }}"
        master_username: "{{ rds_master_username }}"
        master_user_password: "{{ rds_master_password }}"
        db_instance_class: db.t2.micro
        engine: mysql
        allocated_storage: 20
        region: "{{ region }}"
        state: present
