- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/vpc_setup.yml
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup.yml

    - name: Delete RDS read replica
      rds_instance:
        db_instance_identifier: "{{ rds_instance_identifier }}-replica"
        region: "{{ secondary_region }}"
        state: absent
      ignore_errors: yes

    - name: Delete RDS instance
      rds_instance:
        db_instance_identifier: "{{ rds_instance_identifier }}"
        region: "{{ region }}"
        state: absent
      ignore_errors: yes

    - name: Delete RDS subnet group
      rds_subnet_group:
        name: "{{ rds_subnet_group }}"
        region: "{{ region }}"
        state: absent
      ignore_errors: yes

    - name: Delete ELB
      elb:
        name: "{{ elb_name }}"
        state: absent
        region: "{{ region }}"
      ignore_errors: yes

    - name: Delete S3 bucket
      aws_s3_bucket:
        name: "{{ s3_bucket_name }}"
        state: absent
        region: "{{ region }}"
      ignore_errors: yes

    - name: Detach Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        igw_id: "{{ igw_out.gateway_id }}"
        region: "{{ region }}"
        state: detached
      ignore_errors: yes

    - name: Delete Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        igw_id: "{{ igw_out.gateway_id }}"
        region: "{{ region }}"
        state: absent
      ignore_errors: yes

    - name: Delete Public Subnets
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: absent
      loop:
        - "{{ pubsub1_out.subnet.id }}"
        - "{{ pubsub2_out.subnet.id }}"
        - "{{ pubsub3_out.subnet.id }}"
      ignore_errors: yes

    - name: Delete Private Subnets
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: absent
      loop:
        - "{{ privsub1_out.subnet.id }}"
        - "{{ privsub2_out.subnet.id }}"
        - "{{ privsub3_out.subnet.id }}"
      ignore_errors: yes

    - name: Delete NAT Gateway
      ec2_vpc_nat_gateway:
        nat_gateway_id: "{{ NATGW_out.nat_gateway_id }}"
        state: absent
        region: "{{ region }}"
      ignore_errors: yes

    - name: Delete Route Tables
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: absent
      loop:
        - "{{ pubRT_out.route_table.id }}"
        - "{{ privRT_out.route_table.id }}"
      ignore_errors: yes

    - name: Delete Security Groups
      ec2_group:
        name: "{{ item }}"
        region: "{{ region }}"
        state: absent
      loop:
        - "{{ rds_security_group_id }}"
        - "{{ elb_security_group_id }}"
      ignore_errors: yes

    - name: Delete VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        region: "{{ region }}"
        state: absent
      ignore_errors: yes
